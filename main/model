package com.network.networkmonitor.model;

import jakarta.persistence.*;
import java.time.LocalDateTime;

@Entity
public class NetworkLog {

    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    private Long id;

    private boolean connected;
    private LocalDateTime timestamp;
    private String ipAddress;
    private String networkType;
    private Integer signalStrength;
    private String statusMessage;

    public NetworkLog() {}

    public NetworkLog(
            boolean connected,
            LocalDateTime timestamp,
            String ipAddress,
            String networkType,
            Integer signalStrength,
            String statusMessage) {
        this.connected = connected;
        this.timestamp = timestamp;
        this.ipAddress = ipAddress;
        this.networkType = networkType;
        this.signalStrength = signalStrength;
        this.statusMessage = statusMessage;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public boolean isConnected() {
        return connected;
    }

    public void setConnected(boolean connected) {
        this.connected = connected;
    }

    public LocalDateTime getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }

    public String getIpAddress() {
        return ipAddress;
    }

    public void setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
    }

    public String getNetworkType() {
        return networkType;
    }

    public void setNetworkType(String networkType) {
        this.networkType = networkType;
    }

    public Integer getSignalStrength() {
        return signalStrength;
    }

    public void setSignalStrength(Integer signalStrength) {
        this.signalStrength = signalStrength;
    }

    public String getStatusMessage() {
        return statusMessage;
    }

    public void setStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
    }
}
